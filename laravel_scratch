#!/usr/bin/php
<?php

$flags = getopt('h', [
    'pure',                     // install Laravel only
    'no-laravel',               // install all to existing project
    'test',
    'name:'
]);

['packages' => $packages] = json_decode(file_get_contents('scratch.json'), 1);
$pad_right = max(array_map('strlen', array_column($packages, 'name')));

if (empty($flags) || array_key_exists('h', $flags) || array_key_exists('help', $flags)) {
    echo "\33[1;37m
    Laravel 5 scratch installer v1.0

    \33[1;32mOptions:\33[1;37m
           -h, --help      Show this help message
           --name=project  \33[1;33mRequired\33[1;37m Name of new project
        
           --pure          Do not install additional packages
           --no-laravel    Do not create project, just add packages

    \33[1;32mPackages to be installed:\33[1;37m\n";
    foreach ($packages as $package) {
        $name = str_pad($package['name'], $pad_right+2, ' ', STR_PAD_RIGHT);
        if ($package['ignore'] ?? false) {
            echo "\33[0;37m [ignored] \33[1;30m";
        } else {
            echo "           ";
        }
        echo "{$name} {$package['description']}\33[1;37m\n";
    }
    echo "\033[0m\n";
    exit;
}

if (!array_key_exists('name', $flags)) {
    echo "\33[1;33mNo project name specified!\033[0m\n";
    exit;
}

function status($pid)
{
    exec("ps -p $pid", $state);
    return $state[1] ?? false;
}

function show_progress($index = 0)
{
    return  ['[=...]','[.=..]','[..=.]','[...=]','[..=.]','[.=..]'][$index];
}

function run_command($command)
{
    $state = 0;
    exec("{$command} >> /dev/null 2>&1 & echo $!", $pid);
    echo show_progress();
    while (status($pid[0])) {
        echo "\033[6D" . show_progress($state++ % 6);
    }
    echo "\033[6D\33[1;32mDone âœ“\33[1;37m\n";
}

function execute($command, $is_test=false)
{
    $is_test ? run_command('ls') : run_command($command);
}

$name = $flags['name'];
$is_test = array_key_exists('test', $flags);

$start = microtime(1);

echo "\33[1;32mCreating new Laravel 5 project '{$name}'...\33[1;37m\n\n";

if (!array_key_exists('no-laravel', $flags)) {
    echo "Install " . str_pad("Laravel:", $pad_right+2, ' ', STR_PAD_RIGHT);
    execute("composer create-project --prefer-dist laravel/laravel {$name}", $is_test);
    echo str_pad(" + config (1/1):", $pad_right+10, ' ', STR_PAD_RIGHT);
    execute("cd {$name} && echo composer.lock >> .gitignore &&", $is_test);
}

if (!array_key_exists('pure', $flags) && count($packages)) {

    foreach ($packages as $package) {
        if ($package['ignore'] ?? false) {
            continue;
        }
        echo "Install " . str_pad($package['name'] . ':', $pad_right+2, ' ', STR_PAD_RIGHT);
        execute("cd {$name} && composer require {$package['composer']}", $is_test);
        if (array_key_exists('commands', $package)) {
            $pad_left = strlen("Install " . $package['name']);
            foreach ($package['commands'] as $index => $config) {
                $i = $index +1;
                $all = count($package['commands']);
                echo str_pad(" + config ({$i}/{$all}):", $pad_right+10, ' ', STR_PAD_RIGHT);
                
                execute("cd {$name} && {$config}", $is_test);
            }
        }
    }
}

$time = microtime(1) - $start;
$min = number_format($time/60, 0);
$sec = number_format($time%60, 0);

echo "\n\33[1;32mLaravel 5 project '{$name}' successfully created\33[1;37m in {$min}:{$sec} min \033[0m\n";
