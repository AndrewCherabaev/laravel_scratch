#!/usr/bin/php
<?php

$flags = getopt('h', [
    'pure',                     // install no Laravel only
    'no-dev',                   // install no Dev Helpers
    'no-graphql',               // install no Lighthouse
    'no-helpers',               // install no Eloquent Helpers
    'name:'
]);

function status($pid)
{
    exec('ps -p ' . $pid, $state);
    return isset($state[1]);
}

function show_progress($index)
{
    if (-1 == $index) {
        return ' [========] ';
    }
    $progress = [
        ' [=.......] ',
        ' [.=......] ',
        ' [..=.....] ',
        ' [...=....] ',
        ' [....=...] ',
        ' [.....=..] ',
        ' [......=.] ',
        ' [.......=] ',
        ' [......=.] ',
        ' [.....=..] ',
        ' [....=...] ',
        ' [...=....] ',
        ' [..=.....] ',
        ' [.=......] ',
    ];
    return $progress[$index];
}

function run_command($command)
{
    $state = 0;
    exec("{$command} >> /dev/null 2>&1 & echo $!", $pid);
    echo show_progress($state);
    do {
        echo "\033[12D" . show_progress(++$state % 13);
    } while (status($pid[0]));
    echo "\033[12D" . show_progress(-1);
    echo "\33[1;32mDone âœ“\33[1;37m\n";
}

if (empty($flags) || array_key_exists('h', $flags) || array_key_exists('help', $flags)) {
    echo "\33[1;37m
    Laravel 5 scratch installer v1.0

    \33[1;32mOptions:\33[1;37m
        -h, --help      Shows this help message
        --name=project  \33[1;33mRequired\33[1;37m Name of new project
        
        --pure          Do not install additional packages (see below)
        --no-dev        Do not install [Dev Helpers]
        --no-helpers    Do not install [Eloquent Helpers]
        --no-graphql    Do not install [GraphQL integration]


    Packages to be installed:

    \33[1;32m[Dev Helpers]:\33[1;37m
        IDE Helper            Generates a helper file for IDE
        Debug Bar             Integrates PHP Debug Bar
        Extended Generators   Extends built-in generators

    \33[1;32m[Eloquent Helpers]:\33[1;37m
        Eloquent Sluggable    Slugs for models
        Eloquent Filter       Filter models and relationships
        Eloquent Sortable     Sortable behaviour models

    \33[1;32m[GraphQL integration]:\33[1;37m
        Lighthouse            GraphQL library for Laravel
        \033[0m\n";
    exit;
}

if (!array_key_exists('name', $flags)) {
    echo "no project name specified!\n";
    exit(1);
}

$project_name = $flags['name'];
echo "\33[1;32mCreating new Laravel 5 project '{$project_name}'...\33[1;37m\n\n";
echo "Install Laravel:            ";
run_command("composer create-project --prefer-dist laravel/laravel {$project_name}");

if (!array_key_exists('pure', $flags)) {

    if (!array_key_exists('no-dev', $flags)) {
        echo "\nInstall IDE Helper:         ";
        run_command("cd {$project_name} && composer require barryvdh/laravel-ide-helper --dev");
        echo "Install Debug Bar:          ";
        run_command("cd {$project_name} && composer require barryvdh/laravel-debugbar --dev");
        echo "Install Generators:         ";
        run_command("cd {$project_name} && composer require laracasts/generators --dev");
    }

    if (!array_key_exists('no-helpers', $flags)) {
        echo "\nInstall Eloquent Sluggable: ";
        run_command("cd {$project_name} && composer require cviebrock/eloquent-sluggable");
        echo "Install Eloquent Filter:    ";
        run_command("cd {$project_name} && composer require tucker-eric/eloquentfilter");
        echo "Install Eloquent Sortable:  ";
        run_command("cd {$project_name} && composer require spatie/eloquent-sortable");
    }

    if (!array_key_exists('no-graphql', $flags)) {
        echo "\nInstall Lighthouse:         ";
        run_command("cd {$project_name} && composer require nuwave/lighthouse");
        echo "  +creating schema:         ";
        run_command("cd {$project_name} && php artisan vendor:publish --provider=\"Nuwave\Lighthouse\LighthouseServiceProvider\" --tag=schema");
        echo "  +creating config:         ";
        run_command("cd {$project_name} && php artisan vendor:publish --provider=\"Nuwave\Lighthouse\LighthouseServiceProvider\" --tag=config");
    }

}
echo "\n\33[1;32mLaravel 5 project '{$project_name}' successfully created!\033[0m\n";
